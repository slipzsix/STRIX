name: build
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Prepare timezone 
      run: |
            echo "BUILD_TIME=$(TZ=Asia/Jakarta date "+%d%m%Y-%H%M")" >> $GITHUB_ENV
            sudo rm /etc/localtime
            sudo ln -s /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
        
    - name: Install Dependencies
      run: |
            sudo apt update -y
            sudo apt install bc cpio flex bison aptitude git python-is-python3 tar perl wget curl lz4 -y
            sudo aptitude install libssl-dev -y
        
    - name: Fetch Toolchains 
      run: |
            mkdir clang && curl https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -RLO && tar -C clang/ -xf clang-*.tar.gz
            git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 gcc64
            git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 gcc32
                                    
    - name: Fetch SukiSU
      run: |
            curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
                                                         
    - name: Build
      run: |
            export ARCH=arm64
            export PATH="${PWD}/clang/bin:${PWD}gcc64/bin:${PWD}gcc32/bin:${PATH}"
            export KBUILD_BUILD_USER=build-user
            export KBUILD_BUILD_HOST=build-host
            export KBUILD_COMPILER_STRING="${PWD}/clang"           
            export LLVM=1 
            export LLVM_IAS=1
            export CLANG_TRIPLE=aarch64-linux-gnu-
            export CROSS_COMPILE=aarch64-linux-android-
            export CROSS_COMPILE_ARM32=arm-linux-androideabi-             
            make O=out vendor/sweet_defconfig 
            make -j$(nproc --all) O=out CC=clang                   
            mv out/.config out/sweet_defconfig.txt
           
    - name: Upload defconfig 
      uses: actions/upload-artifact@v4
      with:
        name: defconfig-${{ env.BUILD_TIME }}
        path: out/sweet_defconfig.txt

    - name: Fetch Anykernel3
      run: |
            git clone --depth=1 https://github.com/zenkernol-dev/Anykernel3 -b strix AnyKernel3 
            cp out/arch/arm64/boot/Image.gz AnyKernel3/Image.gz
            cp out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
            cp out/arch/arm64/boot/dtb.img AnyKernel3/dtb.img
                    
    - name: Upload Kernel
      uses: actions/upload-artifact@v4
      with:
        name: STRIX-sweet-MIUI-personal-${{ env.BUILD_TIME }}
        path: AnyKernel3/*
