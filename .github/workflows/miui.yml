name: build-kernel-miui
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Prepare timezone 
      run: |
            echo "BUILD_TIME=$(TZ=Asia/Jakarta date "+%d%m%Y-%H%M")" >> $GITHUB_ENV
            sudo rm /etc/localtime
            sudo ln -s /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
        
    - name: Install Dependencies
      run: |
           sudo apt-get update
           sudo apt-get install -y glibc-source libghc-libyaml-dev libyaml-dev binutils-aarch64-linux-gnu \
           binutils-arm-linux-gnueabi binutils device-tree-compiler libtfm-dev libelf-dev cpio kmod nano bc \
           bison ca-certificates curl flex gcc git libc6-dev libssl-dev openssl python-is-python3 ssh wget \
           zip zstd sudo make clang gcc-arm-linux-gnueabi software-properties-common build-essential \
           libarchive-tools gcc-aarch64-linux-gnu python2
                
    - name: clone toolchains
      run: |
             git clone https://gitlab.com/LeCmnGend/proton-clang -b clang-15 --depth=1 clang
#            mkdir clang && curl https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -RLO && tar -C clang/ -xf clang-*.tar.gz
#            git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 gcc64
#            git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 gcc32
            
#    - name: clone KernelSU-Next
#      run: |
#           curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -s next-susfs-dev
           
    - name: Setting [MIUI] Dimensi
      run: |
            sed -i 's/qcom,mdss-pan-physical-width-dimension = <69>;$/qcom,mdss-pan-physical-width-dimension = <695>;/' arch/arm64/boot/dts/qcom/dsi-panel-k6-38-0c-0a-fhd-dsc-video.dtsi
            sed -i 's/qcom,mdss-pan-physical-height-dimension = <154>;$/qcom,mdss-pan-physical-height-dimension = <1546>;/' arch/arm64/boot/dts/qcom/dsi-panel-k6-38-0c-0a-fhd-dsc-video.dtsi
                 
    - name: Build-Kernel
      run: |
           export ARCH=arm64
           export PATH="${PWD}/clang/bin:${PWD}gcc64/bin:${PWD}gcc32/bin:${PATH}"
           export KBUILD_BUILD_USER=nobody
           export KBUILD_BUILD_HOST=android-build
           export KBUILD_COMPILER_STRING="${PWD}/clang"
           make O=out ARCH=arm64 vendor/sweet_defconfig 
           make -j$(nproc --all) O=out \ ARCH=arm64 \ LLVM=1 \ LLVM_IAS=1 \ AR=llvm-ar \ NM=llvm-nm \ LD=ld.lld \ OBJCOPY=llvm-objcopy \ OBJDUMP=llvm-objdump \ STRIP=llvm-strip \ CC=clang \ CROSS_COMPILE=aarch64-linux-gnu- \ CROSS_COMPILE_ARM32=arm-linux-gnueabi-
           mv out/.config out/sweet_defconfig.txt
           
    - name: Upload defconfig 
      uses: actions/upload-artifact@v4
      with:
        name: defconfig-${{ env.BUILD_TIME }}
        path: out/sweet_defconfig.txt
      
    - name: Clone Anykernel3 + priper Image
      run: |
           git clone --depth=1 https://github.com/Taufik-Daulay/AnyKernel3.git -b main AnyKernel3  
            cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/Image.gz-dtb
            cp out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
#            cp out/arch/arm64/boot/dtb.img AnyKernel3/dtb.img
                 
    - name: Upload Image Kernel
      uses: actions/upload-artifact@v4
      with:
        name: STRIX-sweet-miui-personal-${{ env.BUILD_TIME }}
        path: AnyKernel3/*



    
